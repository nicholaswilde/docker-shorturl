---
name: goss

on:
  workflow_dispatch:

env:
  # How long to sleep before running the tests (gives the application time to start)
  GOSS_SLEEP: 30

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    if: "!contains(github.event.head_commit.message, '[ci-skip]')"
    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.5

    # Define if tests and push should be run against which versions/platforms
    - name: Prepare
      id: prep
      run: |
        VERSION=$(cat ./VERSION)
        echo ::set-output name=version::${VERSION}
        CHECKSUM=$(cat ./CHECKSUM)
        echo ::set-output name=checksum::${CHECKSUM}
        LS=$(cat ./LS)
        echo ::set-output name=ls::${LS}
        if test -f "./goss.yaml"; then
          echo ::set-output name=goss::true
        else
          echo ::set-output name=goss::false
        fi
        if [ "${{github.event_name}}" == "pull_request" ]; then
          echo ::set-output name=push::false
        else
          echo ::set-output name=push::true
        fi
        
    - name: Check if tag already exists
      uses: mukunku/tag-exists-action@v1.0.0
      id: checkTag
      with: 
        tag: ${{ steps.prep.outputs.version }}-ls${{ steps.prep.outputs.ls }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Fail if tag already exists
      run: |
        if ${{ steps.checkTag.outputs.exists }} == true; then
          exit 1
        fi
    
    # Setup QEMU
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1.2.0
      with:
        platforms: amd64,arm64

    # Install and configure Buildx
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1.5.1
      with:
        install: true
        version: latest
        driver-opts: image=moby/buildkit:latest

    # Install the GOSS testing framework
    - name: Set up goss/dgoss
      uses: e1himself/goss-installation-action@v1.0.3
      if: ${{ steps.prep.outputs.goss == 'true' }}
      with:
        version: 'v0.3.16'

    # Creates a local build to run tests on
    - name: Build and Load local test-container
      uses: docker/build-push-action@v2
      if: ${{ steps.prep.outputs.goss == 'true' }}
      with:
        build-args: |
          VERSION=${{ steps.prep.outputs.version }}
          CHECKSUM=${{ steps.prep.outputs.checksum }}
        context: .
        file: ./Dockerfile
        load: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/shorturl:test

    # Run GOSS tests if included with the container
    - name: Run GOSS tests
      if: ${{ steps.prep.outputs.goss == 'true' }}
      env:
        GOSS_FILE: ./goss.yaml
      run: |
        dgoss run ghcr.io/${{ github.repository_owner }}/shorturl:test
